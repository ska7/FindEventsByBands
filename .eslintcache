[{"/Users/nickaralin/Documents/Projects/events-finder/src/index.js":"1","/Users/nickaralin/Documents/Projects/events-finder/src/App.js":"2","/Users/nickaralin/Documents/Projects/events-finder/src/reportWebVitals.js":"3","/Users/nickaralin/Documents/Projects/events-finder/src/context/FavoritesContext.js":"4","/Users/nickaralin/Documents/Projects/events-finder/src/components/Loader.js":"5","/Users/nickaralin/Documents/Projects/events-finder/src/components/Input.js":"6","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventDetails.js":"7","/Users/nickaralin/Documents/Projects/events-finder/src/components/Favorites.js":"8","/Users/nickaralin/Documents/Projects/events-finder/src/components/Theme.js":"9","/Users/nickaralin/Documents/Projects/events-finder/src/components/old-components/MatchedBands.js":"10","/Users/nickaralin/Documents/Projects/events-finder/src/components/Events.js":"11","/Users/nickaralin/Documents/Projects/events-finder/src/components/Band.js":"12","/Users/nickaralin/Documents/Projects/events-finder/src/components/old-components/SaveButton.js":"13","/Users/nickaralin/Documents/Projects/events-finder/src/components/SimilarBands.js":"14","/Users/nickaralin/Documents/Projects/events-finder/src/components/localStorage.js":"15","/Users/nickaralin/Documents/Projects/events-finder/src/components/hooks/useFavorites.js":"16","/Users/nickaralin/Documents/Projects/events-finder/src/components/context/favoritesContext.js":"17","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventsCarousel.js":"18","/Users/nickaralin/Documents/Projects/events-finder/src/components/hooks/spotifyAPI.js":"19","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventGeneralInformation.js":"20","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventLineUp.js":"21","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventsFilter.js":"22"},{"size":612,"mtime":1612382583611,"results":"23","hashOfConfig":"24"},{"size":1985,"mtime":1618397603060,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611775945163,"results":"26","hashOfConfig":"24"},{"size":1290,"mtime":1614172495761,"results":"27","hashOfConfig":"24"},{"size":231,"mtime":1612765980313,"results":"28","hashOfConfig":"24"},{"size":1405,"mtime":1617268561729,"results":"29","hashOfConfig":"24"},{"size":5682,"mtime":1619109224353,"results":"30","hashOfConfig":"24"},{"size":1471,"mtime":1619293299418,"results":"31","hashOfConfig":"24"},{"size":826,"mtime":1619113664611,"results":"32","hashOfConfig":"24"},{"size":1768,"mtime":1617174399478,"results":"33","hashOfConfig":"24"},{"size":2776,"mtime":1621927316918,"results":"34","hashOfConfig":"24"},{"size":3432,"mtime":1621955039282,"results":"35","hashOfConfig":"24"},{"size":926,"mtime":1615396651569,"results":"36","hashOfConfig":"24"},{"size":684,"mtime":1616691641127,"results":"37","hashOfConfig":"24"},{"size":1027,"mtime":1617199435380,"results":"38","hashOfConfig":"24"},{"size":715,"mtime":1618042707912,"results":"39","hashOfConfig":"24"},{"size":453,"mtime":1617275535643,"results":"40","hashOfConfig":"24"},{"size":912,"mtime":1619031232178,"results":"41","hashOfConfig":"24"},{"size":1801,"mtime":1618598818118,"results":"42","hashOfConfig":"24"},{"size":3364,"mtime":1618832647774,"results":"43","hashOfConfig":"24"},{"size":4316,"mtime":1621927359305,"results":"44","hashOfConfig":"24"},{"size":455,"mtime":1621954773953,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1on3mdj",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"48"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/nickaralin/Documents/Projects/events-finder/src/index.js",[],["102","103"],"/Users/nickaralin/Documents/Projects/events-finder/src/App.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/reportWebVitals.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/context/FavoritesContext.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/components/Loader.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/components/Input.js",["104","105"],"import { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { Input as Inp } from \"@material-ui/core\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { MatchedBands } from \"./old-components/MatchedBands\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      ...theme.input,\n      height: \"50px\",\n      width: \"100%\",\n    },\n    inputEmpty: {\n      borderRadius: \"10px\",\n    },\n  })\n);\n\nexport const Input = (props) => {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n\n  return (\n    <div className=\"input-container\">\n      <ul className=\"input-list\">\n        <li>\n          <Inp\n            className={classes.root}\n            classes={{\n              root: !inputValue && classes.inputEmpty,\n              focused: classes.focused,\n            }}\n            disableUnderline=\"false\"\n            color=\"primary\"\n            autoFocus=\"true\"\n            value={inputValue}\n            onChange={handleChange}\n            placeholder=\"type in a band name\"\n          />\n        </li>\n        {inputValue ? (\n          <MatchedBands\n            searchString={inputValue}\n            onClick={() => setInputValue(\"\")}\n          />\n        ) : null}\n      </ul>\n    </div>\n  );\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventDetails.js",["106","107","108","109","110","111"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport {\n  CardContent,\n  List,\n  ListItemText,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Typography,\n} from \"@material-ui/core\";\nimport { useSpotify } from \"./hooks/spotifyAPI\";\nimport { Loader } from \"./Loader\";\nimport { EventLineUp } from \"./EventLineUp\";\n\nconst customStyles = (image) => {\n  return makeStyles((theme) =>\n    createStyles({\n      root: {\n        ...theme.card,\n        overflow: \"auto\",\n        background: \"#212527\",\n      },\n      cardContainer: {\n        margin: 0,\n        padding: 0,\n        width: \"100%\",\n      },\n      artist: {\n        fontSize: \"13px\",\n        color: \"white\",\n        transition: \"all 0.2s ease\",\n        borderBottom: \"none\",\n        \"&:hover\": {\n          fontWeight: \"800\",\n        },\n      },\n      eventInfoContainer: {\n        height: \"250px\",\n        display: \"flex\",\n        color: \"white\",\n        width: \"100%\",\n        padding: \"0px 0px 0px 0px\",\n        borderBottom: \"1px solid white\",\n        \"& span\": {\n          padding: \"0px 10px\",\n        },\n        \"& h6\": {\n          padding: \"40px 10px\",\n          fontWeight: \"900\",\n        },\n        \"& h5\": {\n          padding: \"20px 0px\",\n        },\n        // Line Up\n        \"& h4\": {\n          background: \"transparent\",\n          padding: \"10px 0px\",\n          textAlign: \"center\",\n          width: \"100%\",\n          color: \"white\",\n        },\n      },\n      eventMeta: {\n        height: \"100%\",\n        color: \"white\",\n      },\n      artists: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        // background: \"#212527\",\n        // background: \"#6280A5\",\n        color: \"white\",\n        textAlign: \"center\",\n        padding: \"20px 10px\",\n        \"& span\": {\n          fontWeight: \"00\",\n          fontSize: \"20px\",\n        },\n      },\n      lineUp: {\n        width: \"100%\",\n        textAlign: \"center\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        margin: \"35px 0px\",\n        color: \"white\",\n        padding: \"10px\",\n        // overflowWrap: \"break-word\",\n        \"& li:nth-child(1)\": { color: \"yellow\" },\n\n        \"& li\": {\n          display: \"inline\",\n          padding: \"10px 10px\",\n          margin: \"10px\",\n        },\n      },\n      bandImage: {\n        height: \"100%\",\n        // paddingTop: \"59.25%\",\n        paddingTop: \"29.25%\",\n        backgroundAttachment: \"fixed\",\n        // backgroundPosition: \"50% 30%\",\n        backgroundPosition: \"50% 30%\",\n        backgroundSize: \"cover\",\n        width: \"60%\",\n      },\n    })\n  );\n};\n\nconst createTableRow = (artists, classes) => {\n  const chunks = [];\n\n  for (let i = 5; i < artists.length; i += 5) {\n    const chunk = artists.slice(i, i + 5);\n    chunks.push(\n      <TableRow>\n        {chunk.map((artist) => (\n          <TableCell className={classes.artist}>{artist.displayName}</TableCell>\n        ))}\n      </TableRow>\n    );\n  }\n\n  console.log(chunks);\n\n  return <TableBody>{chunks.map((chunk) => chunk)}</TableBody>;\n};\n\nexport const EventDetails = (props) => {\n  const { match, location, eventID } = props;\n  const [event, setEvent] = useState({});\n  const [artists, setArtists] = useState([]);\n  // const imageURL = useSpotify(`${artists[0]}`);\n  const imageURL =\n    \"https://i.scdn.co/image/cec568293ff75ff6fcf9b284b8f387a4b1c8a00f\";\n\n  useEffect(() => {\n    // If URL does not contain the id, eventID will be passed into request\n    const id = match ? match.params.eventID : eventID;\n    axios\n      .get(\n        `https://api.songkick.com/api/3.0/events/${id}.json?apikey=${process.env.REACT_APP_SONGKICK_API_KEY}`\n      )\n      .then(({ data }) => {\n        setEvent(data.resultsPage.results.event);\n        setArtists(\n          data.resultsPage.results.event.performance.map(\n            (artist) => artist.displayName\n          )\n        );\n      });\n  }, []);\n\n  const classes = customStyles()();\n\n  return (\n    <div className=\"event-details-container\">\n      <Card className={classes.root}>\n        {artists.length ? (\n          <>\n            <List className={classes.artists}>\n              {artists.slice(0, 3).map((artist) => (\n                <ListItemText>{artist}</ListItemText>\n              ))}\n              {artists.length > 3 ? (\n                <ListItemText>{`and ${artists.length - 3} more`}</ListItemText>\n              ) : null}\n            </List>\n            <CardContent className={classes.cardContainer}>\n              <CardContent className={classes.eventInfoContainer}>\n                {imageURL ? (\n                  <CardMedia\n                    image={imageURL}\n                    title=\"bandImage\"\n                    className={classes.bandImage}\n                  />\n                ) : (\n                  <Loader />\n                )}\n                <CardContent className={classes.eventMeta}>\n                  <Typography variant=\"h7\">{event.start.date}</Typography>\n                  <Typography variant=\"h6\">{event.displayName}</Typography>\n                  <Typography variant=\"subtitle1\">\n                    {event.location.city}\n                  </Typography>\n                </CardContent>\n              </CardContent>\n              <EventLineUp\n                artists={artists}\n                collapse={false}\n                cancelled=\"true\"\n              />\n            </CardContent>\n          </>\n        ) : (\n          <Loader />\n        )}\n      </Card>\n    </div>\n  );\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/Favorites.js",["112","113","114","115","116"],"import React, { useState, useEffect, useContext } from \"react\";\n\nimport { List, ListItem, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { getSavedFavorites, useFavorites } from \"./hooks/useFavorites\";\nimport { FavoritesContext } from \"./context/favoritesContext\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    title: {\n      width: \"100%\",\n      height: \"50px\",\n      color: \"white\",\n      margin: \"10px auto\",\n      padding: \"10px\",\n      fontWeight: \"500\",\n      textAlign: \"center\",\n      margin: \"35px 0px\",\n      // textShadow: \"0px 0px 5px black\",\n    },\n    listItem: {\n      fontFamily: \"Inconsolata, monospace\",\n      padding: \"20px\",\n      height: \"auto\",\n      \"&:hover\": {\n        backgroundColor: \"rgba(0, 0, 0, 0.2)\",\n      },\n    },\n    list: {\n      width: \"100%\",\n      color: \"white\",\n      flexDirection: \"column\",\n    },\n  })\n);\n\nexport const Favorites = () => {\n  const classes = useStyles();\n\n  const { favorites } = useContext(FavoritesContext);\n\n  return (\n    <div className=\"favorites-container\">\n      <Typography variant=\"h5\" className={classes.title}>\n        FAVORITE EVENTS\n      </Typography>\n      <List className={classes.list}>\n        {favorites.map((event) => {\n          return (\n            <ListItem className={classes.listItem}>\n              {event.displayName}\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/Theme.js",["117"],"import { createMuiTheme } from \"@material-ui/core/styles\";\nimport purple from \"@material-ui/core/colors/purple\";\n\nconst appPrimary = \"#2a3d66\";\nconst appSecondary = \"#ac8f9c\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: appPrimary,\n    },\n    secondary: {\n      main: appSecondary,\n    },\n  },\n  typography: {\n    fontFamily: `'Inconsolata', monospace`,\n  },\n  input: {\n    paddingLeft: \"20px\",\n    background: \"#eeeeee\",\n    borderTopRightRadius: \"10px\",\n    borderTopLeftRadius: \"10px\",\n    transition: \"all 0.2s ease\",\n    boxShadow: \"0px 0px 3px 1px black\",\n  },\n  card: {\n    margin: \"25px auto 0px auto\",\n    height: \"700px\",\n    width: \"80%\",\n    borderRadius: \"10px\",\n    boxShadow: \"-5px 0px 10px 2px black\",\n  },\n  links: {\n    color: \"white\",\n    textDecoration: \"none\",\n  },\n});\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/old-components/MatchedBands.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/components/Events.js",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133"],"import React, { useState, useEffect, useContext } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\n\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\n\nimport { useFavorites, checkIfSaved } from \"./hooks/useFavorites\";\nimport { FavoritesContext } from \"./context/favoritesContext\";\nimport { Link } from \"react-router-dom\";\nimport { EventGeneralInformation } from \"./EventGeneralInformation\";\nimport { EventLineUp } from \"./EventLineUp\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    color: \"white\",\n    flexDirection: \"column\",\n  },\n  container: {},\n  checkbox: {\n    \"&:hover\": {\n      backgroundColor: \"rgba(255,255,255, 0.7)\",\n      borderRadius: \"50%\",\n    },\n  },\n  link: {\n    ...theme.links,\n  },\n  listItem: {\n    paddingTop: \"20px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    // minHeight: \"150px\",\n    height: \"auto\",\n    transition: \"all 0.5s ease\",\n    borderTop: \"1px solid rgba(255, 255, 255, 0.0)\",\n    borderBottom: \"1px solid rgba(255, 255, 255, 0)\",\n    \"&:hover\": {\n      // backgroundColor: \"rgba(255,255,255, 0.1)\",\n      backgroundColor: \"rgba(0,0,0, 0.2)\",\n      borderTop: \"1px solid rgba(255, 255, 255, 0.3)\",\n      borderBottom: \"1px solid rgba(255, 255, 255, 0.3)\",\n    },\n  },\n}));\n\nexport const Events = (props) => {\n  const { events, match, location } = props;\n  const classes = useStyles();\n\n  useEffect(() => {}, []);\n\n  return (\n    <List dense className={classes.root}>\n      {events.length ? (\n        events.map((event) => {\n          const labelId = `checkbox-list-secondary-label-${event.id}`;\n          return (\n            <ListItem key={event.id} button className={classes.listItem}>\n              <EventGeneralInformation event={event} />\n              <EventLineUp\n                artists={event.performance.map((artist) => {\n                  return { id: artist.id, name: artist.displayName };\n                })}\n                collapse={true}\n                cancelled={event.status === \"cancelled\" ? true : false}\n              />\n            </ListItem>\n          );\n        })\n      ) : (\n        <li\n          id=\"no-events\"\n          style={{\n            marginTop: \"50%\",\n            fontSize: \"25px\",\n          }}\n        >\n          This artist has no upcoming events!\n        </li>\n      )}\n    </List>\n  );\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/Band.js",["134","135","136"],"/Users/nickaralin/Documents/Projects/events-finder/src/components/old-components/SaveButton.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/components/SimilarBands.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/components/localStorage.js",["137"],"const checkIfSaved = (eventID, favorites) => {\n  return favorites.find((event) => event.id === eventID);\n};\n\n// export const updateFavorites = (action, event) => {\n//   const existingFavorites = JSON.parse(localStorage.getItem(\"favorites\")) || {\n//     favorites: [],\n//   };\n\n//   const saved = checkIfSaved(event.id, existingFavorites.favorites);\n\n//   if (saved) {\n//     const updatedFavorites = existingFavorites.favorites.filter(\n//       (favoriteEvent) => favoriteEvent.id !== event.id\n//     );\n//     localStorage.setItem(\n//       \"favorites\",\n//       JSON.stringify({\n//         favorites: updatedFavorites,\n//       })\n//     );\n//   } else {\n//     existingFavorites.favorites.push(event);\n//     localStorage.setItem(\n//       \"favorites\",\n//       JSON.stringify({\n//         favorites: existingFavorites.favorites,\n//       })\n//     );\n//   }\n// };\n\n// export const getFavorites = (entries, cb) => {\n//   const res = entries.map((entry) => {\n//     return JSON.parse(entry[1]);\n//   });\n\n//   cb(res);\n// };\n",["138","139"],"/Users/nickaralin/Documents/Projects/events-finder/src/components/hooks/useFavorites.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/components/context/favoritesContext.js",[],"/Users/nickaralin/Documents/Projects/events-finder/src/components/EventsCarousel.js",["140","141","142","143"],"import React from \"react\";\n\nimport Carousel from \"react-material-ui-carousel\";\nimport { Card } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { red, blue, green } from \"@material-ui/core/colors\";\nimport { useFavorites } from \"./hooks/useFavorites\";\nimport { EventDetails } from \"./EventDetails\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      ...theme.card,\n      height: \"500px !important\",\n    },\n    carousel: {\n      height: \"800px\",\n      width: \"100%\",\n    },\n  })\n);\n\nexport const EventsCarousel = () => {\n  const { favorites } = useFavorites();\n\n  const classes = useStyles();\n  return (\n    <Carousel\n      className={classes.carousel}\n      autoPlay={false}\n      timeout={100}\n      interval={5000}\n    >\n      {favorites.map((event) => (\n        <EventDetails eventID={event.id} />\n      ))}\n    </Carousel>\n  );\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/hooks/spotifyAPI.js",["144","145"],"import axios from \"axios\";\nimport { throttle } from \"lodash\";\nimport { useRef, useState, useEffect } from \"react\";\n\nconst getAccessToken = async () => {\n  return await axios({\n    method: \"post\",\n    url: \"https://accounts.spotify.com/api/token\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization:\n        \"Basic MzA0OTdkOTRiYjMwNGYyNjhhMzY4ZDdjMWRiODFkMzk6ZDBiYjYzZmVkMTA1NDQ4NTlkYTdiMmVlMjMwMjk2YTI=\",\n    },\n    data: \"grant_type=client_credentials\",\n  }).then(({ data }) => data.access_token);\n};\n\nconst getBand = async (searchString, token) => {\n  return await axios({\n    method: \"get\",\n    url: \"https://api.spotify.com/v1/search\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      Authorization: `Bearer ${token}`,\n    },\n    params: {\n      q: searchString,\n      type: \"artist\",\n      limit: 1,\n    },\n  }).then(({ data }) => data);\n};\n\nlet accessToken = \"\";\n\nconst throttledFetchAccessToken = throttle(\n  async () => {\n    console.log(new Date());\n    return await getAccessToken();\n  },\n  3600000,\n  {\n    trailing: true,\n  }\n);\n\nexport const fetchBandImage = async (searchString) => {\n  accessToken = await throttledFetchAccessToken();\n  const bandInfo = await getBand(searchString, accessToken);\n  console.log(\"images\", bandInfo.artists.items[0].images);\n  return bandInfo.artists.items[0].images[0].url;\n};\n\nexport const useSpotify = (searchString) => {\n  const [image, setImage] = useState(() => {\n    // return fetchBandImage(searchString);\n  });\n\n  useEffect(() => {\n    // const init = async () => {\n    //   const image = await fetchBandImage(searchString);\n    //   setImage(image);\n    // };\n    // init();\n  }, []);\n\n  return image;\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventGeneralInformation.js",["146","147","148"],"import React, { useContext } from \"react\";\n\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Container, makeStyles, Typography } from \"@material-ui/core\";\n\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Favorite from \"@material-ui/icons/Favorite\";\nimport FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\nimport { FavoritesContext } from \"./context/favoritesContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  checkbox: {\n    \"&:hover\": {\n      backgroundColor: \"rgba(255,255,255, 0.7)\",\n      borderRadius: \"50%\",\n    },\n  },\n  link: {\n    ...theme.links,\n  },\n  eventDate: {\n    width: \"10%\",\n    padding: \"0\",\n    margin: \"0\",\n  },\n  location: {\n    fontWeight: \"300\",\n  },\n  eventName: {\n    width: \"80%\",\n  },\n  name: { fontWeight: \"700\" },\n  date: {\n    fontWeight: \"900\",\n  },\n  folded: {\n    display: \"flex\",\n    flexDirection: \"row\",\n\n    width: \"100%\",\n  },\n}));\n\nconst formatDate = (date) => {\n  // Date should come as yyyy-mm-dd\n\n  let [year, month, day] = date.split(\"-\");\n  if (month.includes(\"0\")) month = month.replace(\"0\", \"\");\n\n  const months = [\n    \"#\",\n    \"JAN\",\n    \"FEB\",\n    \"MAR\",\n    \"APR\",\n    \"MAY\",\n    \"JUN\",\n    \"JUL\",\n    \"AUG\",\n    \"SEP\",\n    \"OCT\",\n    \"NOV\",\n    \"DEC\",\n  ];\n\n  return `${months[month]} ${day}`;\n};\n\nconst formatTime = (time) => {\n  // Time should come as hh:mm:ss\n\n  const [hours, minutes] = time.split(\":\");\n\n  console.log(hours, minutes);\n\n  return `${hours}:${minutes}`;\n};\n\nconst checkIfSaved = (eventID, favorites) => {\n  return favorites.find((event) => event.id === eventID);\n};\n\nconst updateFavorites = (event, favorites, setFavorites) => {\n  const isPresent = checkIfSaved(event.id, favorites);\n\n  if (isPresent) {\n    const updatedFavorites = favorites.filter(\n      (favoriteEvent) => favoriteEvent.id !== event.id\n    );\n    setFavorites([...updatedFavorites]);\n  } else {\n    const updatedFavorites = [...favorites, event];\n    setFavorites([...updatedFavorites]);\n  }\n};\n\nexport const EventGeneralInformation = ({ event }) => {\n  const classes = useStyles();\n\n  const { favorites, setFavorites } = useContext(FavoritesContext);\n\n  return (\n    <Container className={classes.folded}>\n      <Container className={classes.eventDate}>\n        <Typography color=\"secondary\" className={classes.date}>\n          {formatDate(event.start.date)}\n        </Typography>\n        {event.start.time && (\n          <Typography>{formatTime(event.start.time)}</Typography>\n        )}\n      </Container>\n      <Container className={classes.eventName}>\n        <Typography className={classes.name}>{event.displayName}</Typography>\n        <Typography className={classes.location}>\n          {event.location.city}\n        </Typography>\n      </Container>\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<FavoriteBorder fontSize=\"medium\" color=\"secondary\" />}\n            onClick={() => updateFavorites(event, favorites, setFavorites)}\n            checked={checkIfSaved(event.id, favorites)}\n            checkedIcon={<Favorite />}\n            name=\"checkedH\"\n          />\n        }\n      />\n      {/* <ListItemSecondaryAction>\n        \n      </ListItemSecondaryAction> */}\n    </Container>\n  );\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventLineUp.js",["149","150","151","152"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  Button,\n  Container,\n  List,\n  ListItem,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { IconButton } from \"@material-ui/core\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Collapse } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  unfolded: {\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    height: \"auto\",\n    padding: \"0\",\n    margin: \"0\",\n    width: \"100%\",\n  },\n  iconWrapper: {\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    position: \"sticky\",\n    top: \"0\",\n  },\n  artist: {\n    fontSize: \"13px\",\n    color: \"white\",\n    transition: \"all 0.3s ease\",\n    borderBottom: \"none\",\n  },\n  table: {\n    width: \"95%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  tableBody: {\n    maxWidth: \"100%\",\n  },\n  link: {\n    color: \"white\",\n    transition: \"all 0.3s ease\",\n    textDecoration: \"none\",\n    borderBottom: \"1px solid transparent\",\n    \"&:hover\": {\n      borderBottom: \"1px solid white\",\n    },\n  },\n  icon: {\n    width: \"50px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n\n    \"&:hover\": {},\n  },\n  lineupTitle: {\n    fontWeight: \"900\",\n  },\n  lineUp: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  arrowSeeLess: {\n    borderRadius: \"50%\",\n    background: \"rgba(255,255,255,0.1)\",\n  },\n  labels: {\n    display: \"flex\",\n    flexDirectios: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: \"50px 15px\",\n  },\n  btnCancelled: {\n    pointerEvents: \"none\",\n    background: \"#840809\",\n    color: \"white\",\n  },\n}));\n\nconst createTableRow = (artists, classes) => {\n  const chunks = [];\n\n  if (artists.length >= 5) {\n    for (let i = 5; i < artists.length; i += 5) {\n      const chunk = artists.slice(i, i + 5);\n      chunks.push(\n        <TableRow>\n          {chunk.map((artist) => (\n            <TableCell className={classes.artist}>\n              <Link\n                to={`/band/${artist.name}?bandID=${artist.id}`}\n                className={classes.link}\n              >\n                {artist.name}\n              </Link>\n            </TableCell>\n          ))}\n        </TableRow>\n      );\n    }\n  } else {\n    chunks.push(\n      <TableRow>\n        {artists.map((artist) => (\n          <TableCell className={classes.artist}>{artist.name}</TableCell>\n        ))}\n      </TableRow>\n    );\n  }\n\n  return chunks;\n};\n\nexport const EventLineUp = ({ artists, cancelled, collapse }) => {\n  const classes = useStyles();\n  // If collapse prop is true, isUnfolded\n  const [isUnfolded, setUnfolded] = useState(!collapse);\n  return (\n    <Container className={classes.unfolded}>\n      {collapse && (\n        <Container className={classes.iconWrapper}>\n          <IconButton\n            color=\"secondary\"\n            onClick={() => setUnfolded(!isUnfolded)}\n            className={classes.icon}\n          >\n            {isUnfolded ? (\n              <ExpandLessIcon className={classes.arrowSeeLess} />\n            ) : (\n              <ExpandMoreIcon />\n            )}\n          </IconButton>\n        </Container>\n      )}\n      <Collapse in={isUnfolded} timeout=\"auto\">\n        <Container className={classes.labels}>\n          <Typography className={classes.lineupTitle}>\n            {artists.length === 1 ? \"SOLO CONCERT\" : \"LINEUP\"}\n          </Typography>\n          {cancelled ? (\n            <Button variant=\"contained\" className={classes.btnCancelled}>\n              Cancelled\n            </Button>\n          ) : (\n            <Button variant=\"outlined\" color=\"secondary\">\n              Buy Tickets\n            </Button>\n          )}\n        </Container>\n        <TableContainer className={classes.table}>\n          <TableBody className={classes.tableBody}>\n            {createTableRow(artists, classes)}\n          </TableBody>\n        </TableContainer>\n      </Collapse>\n    </Container>\n  );\n};\n","/Users/nickaralin/Documents/Projects/events-finder/src/components/EventsFilter.js",["153","154"],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":4,"column":17,"nodeType":"161","messageId":"162","endLine":4,"endColumn":26},{"ruleId":"159","severity":1,"message":"163","line":24,"column":9,"nodeType":"161","messageId":"162","endLine":24,"endColumn":17},{"ruleId":"159","severity":1,"message":"164","line":11,"column":3,"nodeType":"161","messageId":"162","endLine":11,"endColumn":8},{"ruleId":"159","severity":1,"message":"165","line":14,"column":3,"nodeType":"161","messageId":"162","endLine":14,"endColumn":17},{"ruleId":"159","severity":1,"message":"166","line":18,"column":10,"nodeType":"161","messageId":"162","endLine":18,"endColumn":20},{"ruleId":"159","severity":1,"message":"167","line":120,"column":7,"nodeType":"161","messageId":"162","endLine":120,"endColumn":21},{"ruleId":"159","severity":1,"message":"168","line":140,"column":18,"nodeType":"161","messageId":"162","endLine":140,"endColumn":26},{"ruleId":"169","severity":1,"message":"170","line":162,"column":6,"nodeType":"171","endLine":162,"endColumn":8,"suggestions":"172"},{"ruleId":"159","severity":1,"message":"173","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"160","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":36},{"ruleId":"159","severity":1,"message":"174","line":5,"column":10,"nodeType":"161","messageId":"162","endLine":5,"endColumn":27},{"ruleId":"159","severity":1,"message":"175","line":5,"column":29,"nodeType":"161","messageId":"162","endLine":5,"endColumn":41},{"ruleId":"176","severity":1,"message":"177","line":18,"column":7,"nodeType":"178","messageId":"179","endLine":18,"endColumn":13},{"ruleId":"159","severity":1,"message":"180","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"173","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"181","line":1,"column":38,"nodeType":"161","messageId":"162","endLine":1,"endColumn":48},{"ruleId":"159","severity":1,"message":"182","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":19},{"ruleId":"159","severity":1,"message":"183","line":4,"column":21,"nodeType":"161","messageId":"162","endLine":4,"endColumn":31},{"ruleId":"159","severity":1,"message":"184","line":8,"column":8,"nodeType":"161","messageId":"162","endLine":8,"endColumn":31},{"ruleId":"159","severity":1,"message":"185","line":9,"column":8,"nodeType":"161","messageId":"162","endLine":9,"endColumn":20},{"ruleId":"159","severity":1,"message":"186","line":10,"column":8,"nodeType":"161","messageId":"162","endLine":10,"endColumn":16},{"ruleId":"159","severity":1,"message":"187","line":11,"column":8,"nodeType":"161","messageId":"162","endLine":11,"endColumn":16},{"ruleId":"159","severity":1,"message":"188","line":12,"column":8,"nodeType":"161","messageId":"162","endLine":12,"endColumn":22},{"ruleId":"159","severity":1,"message":"175","line":14,"column":10,"nodeType":"161","messageId":"162","endLine":14,"endColumn":22},{"ruleId":"159","severity":1,"message":"189","line":14,"column":24,"nodeType":"161","messageId":"162","endLine":14,"endColumn":36},{"ruleId":"159","severity":1,"message":"190","line":15,"column":10,"nodeType":"161","messageId":"162","endLine":15,"endColumn":26},{"ruleId":"159","severity":1,"message":"191","line":16,"column":10,"nodeType":"161","messageId":"162","endLine":16,"endColumn":14},{"ruleId":"159","severity":1,"message":"192","line":56,"column":19,"nodeType":"161","messageId":"162","endLine":56,"endColumn":24},{"ruleId":"159","severity":1,"message":"168","line":56,"column":26,"nodeType":"161","messageId":"162","endLine":56,"endColumn":34},{"ruleId":"159","severity":1,"message":"193","line":65,"column":17,"nodeType":"161","messageId":"162","endLine":65,"endColumn":24},{"ruleId":"159","severity":1,"message":"194","line":65,"column":10,"nodeType":"161","messageId":"162","endLine":65,"endColumn":22},{"ruleId":"159","severity":1,"message":"195","line":65,"column":24,"nodeType":"161","messageId":"162","endLine":65,"endColumn":39},{"ruleId":"169","severity":1,"message":"196","line":96,"column":6,"nodeType":"171","endLine":96,"endColumn":24,"suggestions":"197"},{"ruleId":"159","severity":1,"message":"198","line":1,"column":7,"nodeType":"161","messageId":"162","endLine":1,"endColumn":19},{"ruleId":"155","replacedBy":"199"},{"ruleId":"157","replacedBy":"200"},{"ruleId":"159","severity":1,"message":"201","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":14},{"ruleId":"159","severity":1,"message":"202","line":6,"column":10,"nodeType":"161","messageId":"162","endLine":6,"endColumn":13},{"ruleId":"159","severity":1,"message":"203","line":6,"column":15,"nodeType":"161","messageId":"162","endLine":6,"endColumn":19},{"ruleId":"159","severity":1,"message":"204","line":6,"column":21,"nodeType":"161","messageId":"162","endLine":6,"endColumn":26},{"ruleId":"159","severity":1,"message":"205","line":3,"column":10,"nodeType":"161","messageId":"162","endLine":3,"endColumn":16},{"ruleId":"159","severity":1,"message":"206","line":57,"column":17,"nodeType":"161","messageId":"162","endLine":57,"endColumn":25},{"ruleId":"159","severity":1,"message":"184","line":6,"column":8,"nodeType":"161","messageId":"162","endLine":6,"endColumn":31},{"ruleId":"159","severity":1,"message":"185","line":7,"column":8,"nodeType":"161","messageId":"162","endLine":7,"endColumn":20},{"ruleId":"159","severity":1,"message":"207","line":49,"column":8,"nodeType":"161","messageId":"162","endLine":49,"endColumn":12},{"ruleId":"159","severity":1,"message":"208","line":7,"column":3,"nodeType":"161","messageId":"162","endLine":7,"endColumn":7},{"ruleId":"159","severity":1,"message":"209","line":8,"column":3,"nodeType":"161","messageId":"162","endLine":8,"endColumn":11},{"ruleId":"159","severity":1,"message":"210","line":9,"column":3,"nodeType":"161","messageId":"162","endLine":9,"endColumn":8},{"ruleId":"159","severity":1,"message":"164","line":10,"column":3,"nodeType":"161","messageId":"162","endLine":10,"endColumn":8},{"ruleId":"159","severity":1,"message":"182","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":19},{"ruleId":"159","severity":1,"message":"211","line":4,"column":22,"nodeType":"161","messageId":"162","endLine":4,"endColumn":34},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'inputRef' is assigned a value but never used.","'Table' is defined but never used.","'TableContainer' is defined but never used.","'useSpotify' is defined but never used.","'createTableRow' is assigned a value but never used.","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'eventID' and 'match'. Either include them or remove the dependency array.","ArrayExpression",["214"],"'useState' is defined but never used.","'getSavedFavorites' is defined but never used.","'useFavorites' is defined but never used.","no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","'purple' is defined but never used.","'useContext' is defined but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'ListItemText' is defined but never used.","'Checkbox' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'checkIfSaved' is defined but never used.","'FavoritesContext' is defined but never used.","'Link' is defined but never used.","'match' is assigned a value but never used.","'labelId' is assigned a value but never used.","'filterString' is assigned a value but never used.","'setFilterString' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'bandName', 'match.params.bandName', and 'props'. Either include them or remove the dependency array.",["215"],"'checkIfSaved' is assigned a value but never used.",["212"],["213"],"'Card' is defined but never used.","'red' is defined but never used.","'blue' is defined but never used.","'green' is defined but never used.","'useRef' is defined but never used.","'setImage' is assigned a value but never used.","'year' is assigned a value but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Paper' is defined but never used.","'createStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},"Update the dependencies array to be: [eventID, match]",{"range":"220","text":"221"},"Update the dependencies array to be: [bandID, bandName, location, match.params.bandName, props]",{"range":"222","text":"223"},[4107,4109],"[eventID, match]",[2712,2730],"[bandID, bandName, location, match.params.bandName, props]"]